name: build

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      CI: 1
      DATA_SCIENCE_SERVICE: ${{ secrets.DATA_SCIENCE_SERVICE }}
      DATA_SCIENCE_SERVICE_TOKEN: ${{ secrets.DATA_SCIENCE_SERVICE_TOKEN }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up code coverage monitoring
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          builder: ${{ steps.buildx.outputs.name }}
          tags: cfranklin11/tipresias_frontend:latest
          load: true
      - name: Lint
        if: ${{ always() }}
        run: |
          docker run --rm cfranklin11/tipresias_frontend:latest yarn run eslint src
      - name: Check types
        if: ${{ always() }}
        run: |
          docker run --rm cfranklin11/tipresias_frontend:latest yarn run flow
      - name: Run unit tests
        if: ${{ always() }}
        run: |
          docker run --rm -e CI=true cfranklin11/tipresias_frontend:latest yarn run test:unit
      - name: GQL integration tests
        id: gql_integration_tests
        if: ${{ always() }}
        run: |
          docker-compose -f docker-compose.ci.yml build
          docker-compose -f docker-compose.ci.yml up --no-start
          ./scripts/update_frontend_gql_types.sh
      - name: Save updated GQL schema
        uses: actions/upload-artifact@v2
        if: ${{ steps.gql_integration_tests.outcome == 'failure' }}
        with:
          name: gql-schema
          path: ./schema.json
      - name: Browser tests
        id: browser_tests
        if: ${{ always() }}
        run: |
          ./scripts/browser_tests.sh docker-compose.ci.yml
          docker-compose -f docker-compose.ci.yml stop
      - name: Save Cypress screenshots
        uses: actions/upload-artifact@v2
        if: ${{ steps.browser_tests.outcome == 'failure' }}
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots/
      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v1
        with:
          username: cfranklin11
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push updated images
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push cfranklin11/tipresias_frontend:latest
